[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "CMMN-parser"
version = "0.1.0"
description = "A parsing library for CMMN (Case Management Model and Notation) with XML and JSON support"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: XML",
    "Topic :: Text Processing :: General"
]
keywords = ["cmmn", "parser", "case-management", "notation", "xml", "json", "schema", "validation"]
requires-python = ">=3.8"
dependencies = [
    "jsonschema>=4.23.0",
    "lxml>=4.6.0",
    "typing-extensions>=4.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "radon>=6.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0"
]

[project.urls]
Homepage = "https://github.com/eamonnfaherty/CMMN-parser"
Repository = "https://github.com/eamonnfaherty/CMMN-parser"
Issues = "https://github.com/eamonnfaherty/CMMN-parser/issues"

[tool.setuptools.packages.find]
where = ["cmmn_parser"]

[tool.setuptools.package-dir]
"" = "cmmn_parser"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["cmmn_parser"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
fail_under = 95
