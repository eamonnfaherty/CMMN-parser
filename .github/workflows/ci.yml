name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --extra test --extra dev
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        uv run flake8 src/cmmn_parser --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        uv run flake8 src/cmmn_parser --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Type check with mypy
      run: |
        uv run mypy src/cmmn_parser --ignore-missing-imports
    
    - name: Format check with black
      run: |
        uv run black --check src/cmmn_parser tests/
    
    - name: Import sort check with isort
      run: |
        uv run isort --check-only src/cmmn_parser tests/
    
    - name: Run tests with pytest
      run: |
        uv run pytest tests/ -v --cov=src/cmmn_parser --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  test-package:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Build package
      run: |
        uv build
    
    - name: Test package installation
      run: |
        uv pip install dist/*.whl
        python -c "import cmmn_parser; print('Package imported successfully')"
        python -c "from cmmn_parser import CMMNParser, parse_cmmn_string; print('Parser functions work')"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        uv sync --extra dev
    
    - name: Run safety check
      run: |
        uv pip install safety
        uv run safety check --json || true